# -*- coding: utf-8 -*-
"""Diabetes Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k6zUaJorHLseSA2zr8MNTWXnU_vhUlhN
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn import svm 
from sklearn.metrics import accuracy_score

dia_dataset=pd.read_csv("/content/diabetes.csv")
dia_dataset.head()

dia_dataset.shape

dia_dataset.describe()

dia_dataset['Outcome'].value_counts()

dia_dataset.groupby('Outcome').mean()

x=dia_dataset.drop(columns="Outcome", axis=1)
y=dia_dataset['Outcome']

print(x)
print(y)

"""Data Standardization

Train Test Split
"""

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)

print(x_train.shape,x_test.shape)

classifier=svm.SVC(kernel='linear')

classifier.fit(x_train,y_train)

#Accuracy Score on train data
x_train_acc=classifier.predict(x_train)
training_data_acc=accuracy_score(x_train_acc,y_train)

print("Accuarcy score=",training_data_acc)

#Accuracy Score on test data
x_test_pred=classifier.predict(x_test)
test_data_acc=accuracy_score(x_test_pred,y_test)

print("Accuarcy score=",test_data_acc)

"""Predictive System"""

input_data= (4,110,92,0,0,37.6,0.191,30)
input_data = np.array(input_data).reshape(1,-1)

print(input_data)

prediction = classifier.predict(input_data)
print(prediction)

if prediction[0]==0:
  print("The Person is not Diabetic")
else:
  print("THe Person is Diabetic")

"""Saving the train model"""

import pickle

filename="train_model.pkl";
pickle.dump(classifier,open(filename,'wb'))

"""loading the saved model"""

load_model=pickle.load(open("train_model.pkl",'rb'))

input_data= (4,110,92,0,0,37.6,0.191,30)

input_data = np.array(input_data).reshape(1,-1)

prediction = load_model.predict(input_data)
print(prediction)
if prediction[0]==0:
  print("The Person is not Diabetic")
else:
  print("THe Person is Diabetic")